{"version":3,"sources":["Counter.tsx","App.tsx","index.tsx"],"names":["Counter","count","addOne","add100","increase","className","number","lastChar","String","slice","twoLastChars","trickyChars","includes","getKopiykasCase","type","onClick","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAUaA,EAA2B,SAAC,GAElC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,OAAQC,EACX,EADWA,OAAQC,EACnB,EADmBA,SAsCvB,OACE,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,mBAAd,6DAGA,mBAAGA,UAAS,mDAzCZJ,GAAS,IACJ,iDAGLA,GAAS,KACJ,iDAGLA,GAAS,IACJ,gCAGLA,GAAS,IACJ,mCAGF,mCAyBH,mBAIMA,EAJN,YAtBkB,SAACK,GACvB,IAAMC,EAAWC,OAAOF,GAAQG,OAAO,GACjCC,EAAeF,OAAOF,GAAQG,OAAO,GACrCE,EAAc,CAAC,KAAM,KAAM,KAAM,MAEvC,MAAiB,MAAbJ,GAAqBI,EAAYC,SAASF,GAI1C,MAAME,SAASL,KAAcI,EAAYC,SAASF,GAC7C,6CAGF,6CAPE,6CAoBUG,CAAgBZ,SAGjC,sBAAKI,UAAU,sBAAf,UACE,wBACES,KAAK,SACLT,UAAU,4BAIVU,QAAS,kBAAMb,KANjB,qBAUA,wBACEY,KAAK,SACLT,UAAU,4BAIVU,QAAS,kBAAMZ,KANjB,qBAUA,wBACEW,KAAK,SACLT,UAAS,mEAGLJ,EAAQ,IAAM,EAAI,aAAe,UAH5B,gBAKTc,QAAS,kBAAMX,KAPjB,6BC3EFY,E,4MACJC,MAAQ,CACNhB,MAAO,G,EAGTC,OAAS,WACP,EAAKgB,UAAS,SAACC,GAAD,MAAgB,CAAElB,MAAOkB,EAAUlB,MAAQ,O,EAG3DE,OAAS,WACP,EAAKe,UAAS,SAACC,GAAD,MAAgB,CAAElB,MAAOkB,EAAUlB,MAAQ,S,EAG3DG,SAAW,WACL,EAAKa,MAAMhB,MAAQ,IAAM,GAC3B,EAAKE,SAGP,EAAKD,U,4CAGP,WACE,OACE,cAAC,EAAD,CACED,MAAOmB,KAAKH,MAAMhB,MAClBC,OAAQkB,KAAKlB,OACbC,OAAQiB,KAAKjB,OACbC,SAAUgB,KAAKhB,e,GA3BLiB,IAAMC,WAiCTN,ICtCfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.95e98086.chunk.js","sourcesContent":["import React from 'react';\nimport './Counter.scss';\n\ntype Props = {\n  count: number;\n  addOne: () => void;\n  add100: () => void;\n  increase: () => void;\n};\n\nexport const Counter: React.FC<Props> = ({\n  count, addOne, add100, increase,\n}) => {\n  const getCountClasses = () => {\n    if (count >= 2000) {\n      return 'has-text-link is-size-1 has-background-success';\n    }\n\n    if (count >= 1500) {\n      return 'has-text-link is-size-2 has-background-primary';\n    }\n\n    if (count >= 1000) {\n      return 'has-background-info is-size-3';\n    }\n\n    if (count >= 500) {\n      return 'has-background-warning is-size-4';\n    }\n\n    return 'has-background-danger is-size-4';\n  };\n\n  const getKopiykasCase = (number: number) => {\n    const lastChar = String(number).slice(-1);\n    const twoLastChars = String(number).slice(-2);\n    const trickyChars = ['11', '12', '13', '14'];\n\n    if (lastChar === '1' && !trickyChars.includes(twoLastChars)) {\n      return 'копійку';\n    }\n\n    if ('234'.includes(lastChar) && !trickyChars.includes(twoLastChars)) {\n      return 'копійки';\n    }\n\n    return 'копійок';\n  };\n\n  return (\n    <div className=\"level\">\n      <div className=\"text-content\">\n        <h1 className=\"title level-left\">\n          How much should this project cost on freelance?\n        </h1>\n        <p className={`\n          has-text-centered\n          ${getCountClasses()}`}\n        >\n          {`${count} ${getKopiykasCase(count)}`}\n        </p>\n      </div>\n      <div className=\"level-right buttons\">\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\n            is-medium\"\n          onClick={() => addOne()}\n        >\n          Add One\n        </button>\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\n            is-medium\"\n          onClick={() => add100()}\n        >\n          Add 100\n        </button>\n        <button\n          type=\"button\"\n          className={`\n            button\n            is-medium\n            ${count % 5 === 0 ? 'is-success' : 'is-info'}\n          `}\n          onClick={() => increase()}\n        >\n          Increase\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './Counter';\n\ntype State = {\n  count: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState((prevState) => ({ count: prevState.count + 1 }));\n  };\n\n  add100 = () => {\n    this.setState((prevState) => ({ count: prevState.count + 100 }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}