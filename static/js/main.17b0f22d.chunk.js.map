{"version":3,"sources":["Counter.tsx","App.tsx","index.tsx"],"names":["Counter","count","addOne","add100","increase","className","classNames","number","lastChar","String","slice","twoLastChars","trickyChars","includes","getKopiykasCase","type","onClick","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAWaA,EAA2B,SAAC,GAElC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,OAAQC,EACX,EADWA,OAAQC,EACnB,EADmBA,SAkBvB,OACE,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,mBAAd,6DAGA,mBAAGA,UAAWC,IACZ,oBAAqB,CACnB,mCAAoCL,GAAS,IAC7C,mCAAoCA,EAAQ,KAAQA,GAAS,KAC7D,gBAAiBA,GAAS,KAC1B,gCAAiCA,EAAQ,MAAQA,GAAS,IAC1D,YAAaA,EAAQ,IACrB,yBAA0BA,GAAS,KAAOA,EAAQ,IAClD,wBAAyBA,EAAQ,MARrC,mBAYMA,EAZN,YAtBkB,SAACM,GACvB,IAAMC,EAAWC,OAAOF,GAAQG,OAAO,GACjCC,EAAeF,OAAOF,GAAQG,OAAO,GACrCE,EAAc,CAAC,KAAM,KAAM,KAAM,MAEvC,MAAiB,MAAbJ,GAAqBI,EAAYC,SAASF,GAI1C,MAAME,SAASL,KAAcI,EAAYC,SAASF,GAC7C,6CAGF,6CAPE,6CA4BUG,CAAgBb,SAGjC,sBAAKI,UAAU,sBAAf,UACE,wBACEU,KAAK,SACLV,UAAU,4BAIVW,QAAS,kBAAMd,KANjB,qBAUA,wBACEa,KAAK,SACLV,UAAU,4BAIVW,QAAS,kBAAMb,KANjB,qBAUA,wBACEY,KAAK,SACLV,UAAWC,IACT,mBAAoB,CAClB,aAAcL,EAAQ,IAAM,EAC5B,UAAWA,EAAQ,IAAM,IAG7Be,QAAS,kBAAMZ,KARjB,6BChEFa,E,4MACJC,MAAQ,CACNjB,MAAO,G,EAGTC,OAAS,WACP,EAAKiB,UAAS,SAACC,GAAD,MAAgB,CAAEnB,MAAOmB,EAAUnB,MAAQ,O,EAG3DE,OAAS,WACP,EAAKgB,UAAS,SAACC,GAAD,MAAgB,CAAEnB,MAAOmB,EAAUnB,MAAQ,S,EAG3DG,SAAW,WACL,EAAKc,MAAMjB,MAAQ,IAAM,GAC3B,EAAKE,SAGP,EAAKD,U,4CAGP,WACE,OACE,cAAC,EAAD,CACED,MAAOoB,KAAKH,MAAMjB,MAClBC,OAAQmB,KAAKnB,OACbC,OAAQkB,KAAKlB,OACbC,SAAUiB,KAAKjB,e,GA3BLkB,IAAMC,WAiCTN,ICtCfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.17b0f22d.chunk.js","sourcesContent":["import React from 'react';\nimport './Counter.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  count: number;\n  addOne: () => void;\n  add100: () => void;\n  increase: () => void;\n};\n\nexport const Counter: React.FC<Props> = ({\n  count, addOne, add100, increase,\n}) => {\n  const getKopiykasCase = (number: number) => {\n    const lastChar = String(number).slice(-1);\n    const twoLastChars = String(number).slice(-2);\n    const trickyChars = ['11', '12', '13', '14'];\n\n    if (lastChar === '1' && !trickyChars.includes(twoLastChars)) {\n      return 'копійку';\n    }\n\n    if ('234'.includes(lastChar) && !trickyChars.includes(twoLastChars)) {\n      return 'копійки';\n    }\n\n    return 'копійок';\n  };\n\n  return (\n    <div className=\"level\">\n      <div className=\"text-content\">\n        <h1 className=\"title level-left\">\n          How much should this project cost on freelance?\n        </h1>\n        <p className={classNames(\n          'has-text-centered', {\n            'is-size-1 has-background-success': count >= 2000,\n            'is-size-2 has-background-primary': count < 2000 && count >= 1500,\n            'has-text-link': count >= 1500,\n            'has-background-info is-size-3': count < 1500 && count >= 1000,\n            'is-size-4': count < 1000,\n            'has-background-warning': count >= 500 && count < 1000,\n            'has-background-danger': count < 500,\n          },\n        )}\n        >\n          {`${count} ${getKopiykasCase(count)}`}\n        </p>\n      </div>\n      <div className=\"level-right buttons\">\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\n            is-medium\"\n          onClick={() => addOne()}\n        >\n          Add One\n        </button>\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\n            is-medium\"\n          onClick={() => add100()}\n        >\n          Add 100\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-medium', {\n              'is-success': count % 5 === 0,\n              'is-info': count % 5 !== 0,\n            },\n          )}\n          onClick={() => increase()}\n        >\n          Increase\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './Counter';\n\ntype State = {\n  count: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState((prevState) => ({ count: prevState.count + 1 }));\n  };\n\n  add100 = () => {\n    this.setState((prevState) => ({ count: prevState.count + 100 }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}