{"version":3,"sources":["functions/getKopiykasCase.ts","functions/getClassNameByCount.ts","Counter.tsx","App.tsx","index.tsx"],"names":["getKopiykasCase","number","lastChar","String","slice","twoLastChars","trickyChars","includes","getClassNameByCount","count","Counter","addOne","add100","increase","className","type","onClick","classNames","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAAaA,EAAkB,SAACC,GAC9B,IAAMC,EAAWC,OAAOF,GAAQG,OAAO,GACjCC,EAAeF,OAAOF,GAAQG,OAAO,GACrCE,EAAc,CAAC,KAAM,KAAM,KAAM,MAEvC,MAAiB,MAAbJ,GAAqBI,EAAYC,SAASF,GAI1C,MAAME,SAASL,KAAcI,EAAYC,SAASF,GAC9C,GAAN,OAAUJ,EAAV,+CAGI,GAAN,OAAUA,EAAV,+CAPQ,GAAN,OAAUA,EAAV,gDCNSO,EAAsB,SAACC,GAClC,QAAQ,GACN,KAAMA,GAAS,IACb,MAAO,mCACT,KAAMA,EAAQ,KAAQA,GAAS,KAC7B,MAAO,mCACT,KAAMA,EAAQ,MAAQA,GAAS,IAC7B,MAAO,gCACT,KAAMA,EAAQ,KAAQA,GAAS,IAC7B,MAAO,mCACT,KAAMA,GAAS,KAAOA,EAAQ,IAC5B,MAAO,yBACT,QACE,MAAO,0B,OCAAC,EAA2B,SAAC,GAElC,IADLD,EACI,EADJA,MAAOE,EACH,EADGA,OAAQC,EACX,EADWA,OAAQC,EACnB,EADmBA,SAEvB,OACE,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,mBAAd,6DAGA,mBAAGA,UAAS,4BAAuBN,EAAoBC,IAAvD,mBACMT,EAAgBS,SAGxB,sBAAKK,UAAU,sBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,4BAIVE,QAASL,EANX,qBAUA,wBACEI,KAAK,SACLD,UAAU,4BAIVE,QAASJ,EANX,qBAUA,wBACEG,KAAK,SACLD,UAAWG,IACT,mBAAoB,CAClB,aAAcR,EAAQ,IAAM,EAC5B,UAAWA,EAAQ,IAAM,IAG7BO,QAASH,EARX,6BCvCFK,E,4MACJC,MAAQ,CACNV,MAAO,G,EAGTE,OAAS,WACP,EAAKS,UAAS,SAACC,GAAD,MAAgB,CAAEZ,MAAOY,EAAUZ,MAAQ,O,EAG3DG,OAAS,WACP,EAAKQ,UAAS,SAACC,GAAD,MAAgB,CAAEZ,MAAOY,EAAUZ,MAAQ,S,EAG3DI,SAAW,WACL,EAAKM,MAAMV,MAAQ,IAAM,GAC3B,EAAKG,SAGP,EAAKD,U,4CAGP,WACE,OACE,cAAC,EAAD,CACEF,MAAOa,KAAKH,MAAMV,MAClBE,OAAQW,KAAKX,OACbC,OAAQU,KAAKV,OACbC,SAAUS,KAAKT,e,GA3BLU,IAAMC,WAiCTN,ICtCfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3befb8c0.chunk.js","sourcesContent":["export const getKopiykasCase = (number: number) => {\n  const lastChar = String(number).slice(-1);\n  const twoLastChars = String(number).slice(-2);\n  const trickyChars = ['11', '12', '13', '14'];\n\n  if (lastChar === '1' && !trickyChars.includes(twoLastChars)) {\n    return `${number} копійку`;\n  }\n\n  if ('234'.includes(lastChar) && !trickyChars.includes(twoLastChars)) {\n    return `${number} копійки`;\n  }\n\n  return `${number} копійок`;\n};\n","export const getClassNameByCount = (count: number): string => {\n  switch (true) {\n    case (count >= 2000):\n      return 'is-size-1 has-background-success';\n    case (count < 2000 && count >= 1500):\n      return 'is-size-2 has-background-primary';\n    case (count < 1500 && count >= 1000):\n      return 'has-background-info is-size-3';\n    case (count < 1000 && count >= 500):\n      return 'has-background-warning is-size-4';\n    case (count >= 500 && count < 1000):\n      return 'has-background-warning';\n    default:\n      return 'has-background-danger';\n  }\n};\n","import React from 'react';\nimport './Counter.scss';\nimport classNames from 'classnames';\nimport { getKopiykasCase } from './functions/getKopiykasCase';\nimport { getClassNameByCount } from './functions/getClassNameByCount';\n\ntype Props = {\n  count: number;\n  addOne: () => void;\n  add100: () => void;\n  increase: () => void;\n};\n\nexport const Counter: React.FC<Props> = ({\n  count, addOne, add100, increase,\n}) => {\n  return (\n    <div className=\"level\">\n      <div className=\"text-content\">\n        <h1 className=\"title level-left\">\n          How much should this project cost on freelance?\n        </h1>\n        <p className={`has-text-centered ${getClassNameByCount(count)}`}>\n          {`${getKopiykasCase(count)}`}\n        </p>\n      </div>\n      <div className=\"level-right buttons\">\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\n            is-medium\"\n          onClick={addOne}\n        >\n          Add One\n        </button>\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\n            is-medium\"\n          onClick={add100}\n        >\n          Add 100\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-medium', {\n              'is-success': count % 5 === 0,\n              'is-info': count % 5 !== 0,\n            },\n          )}\n          onClick={increase}\n        >\n          Increase\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './Counter';\n\ntype State = {\n  count: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState((prevState) => ({ count: prevState.count + 1 }));\n  };\n\n  add100 = () => {\n    this.setState((prevState) => ({ count: prevState.count + 100 }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}